using System;\nusing System.Net.Http;\nusing System.Text;\nusing System.Threading.Tasks;\nusing Newtonsoft.Json;\n\npublic class ApiResponse<T>\n{\n    public T Data { get; set; }\n    public bool IsSuccess { get; set; }\n    public string ErrorMessage { get; set; }\n    public int StatusCode { get; set; }\n}\n\npublic class DonationApiClient\n{\n    private readonly HttpClient _httpClient;\n    private readonly string _baseUrl;\n    private bool _simulateError;\n\n    public DonationApiClient(string baseUrl)\n    {\n        _httpClient = new HttpClient();\n        _baseUrl = baseUrl;\n    }\n\n    public void SimulateError(bool simulate)\n    {\n        _simulateError = simulate;\n    }\n\n    public async Task<ApiResponse<ContentResult>> ConfirmDonationAsync(DonationDto donationDto)\n    {\n        if (_simulateError)\n        {\n            return new ApiResponse<ContentResult>\n            {\n                IsSuccess = false,\n                ErrorMessage = \"Simulated error\",\n                StatusCode = 500\n            };\n        }\n\n        var json = JsonConvert.SerializeObject(donationDto);\n        var content = new StringContent(json, Encoding.UTF8, \"application/json\");\n\n        var response = await _httpClient.PutAsync($\"{_baseUrl}/api/v1/donation/confirm\", content);\n\n        var apiResponse = new ApiResponse<ContentResult>\n        {\n            StatusCode = (int)response.StatusCode\n        };\n\n        if (response.IsSuccessStatusCode)\n        {\n            var responseContent = await response.Content.ReadAsStringAsync();\n            apiResponse.Data = JsonConvert.DeserializeObject<ContentResult>(responseContent);\n            apiResponse.IsSuccess = true;\n        }\n        else\n        {\n            apiResponse.ErrorMessage = await response.Content.ReadAsStringAsync();\n            apiResponse.IsSuccess = false;\n        }\n\n        return apiResponse;\n    }\n}